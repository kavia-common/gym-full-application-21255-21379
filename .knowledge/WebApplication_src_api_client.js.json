{"is_source_file": true, "format": "JavaScript", "description": "This file provides API client functions and interceptors for handling authentication tokens, including token refresh logic for API requests in a React application.", "external_files": ["./endpoints"], "external_methods": ["ENDPOINTS"], "published": ["setAuthToken", "getAuthToken", "clearAuthAndRedirect", "apiGet", "apiPost", "apiPatch", "apiDelete", "fakeAuth"], "classes": [], "methods": [{"name": "notifySubscribers(newToken)", "description": "Notify all queued subscribers with the new token after a refresh.", "scope": "", "scopeKind": ""}, {"name": "addRefreshSubscriber(callback)", "description": "Add a callback to the list of subscribers waiting for a token refresh to complete.", "scope": "", "scopeKind": ""}, {"name": "setAuthToken(token)", "description": "Set the in-memory authentication token.", "scope": "", "scopeKind": ""}, {"name": "getAuthToken()", "description": "Retrieve the current in-memory authentication token.", "scope": "", "scopeKind": ""}, {"name": "clearAuthAndRedirect()", "description": "Clear the in-memory auth token and redirect user to login page.", "scope": "", "scopeKind": ""}, {"name": "apiGet(url, config = {})", "description": "Perform a GET request to the backend API.", "scope": "", "scopeKind": ""}, {"name": "apiPost(url, body = {}, config = {})", "description": "Perform a POST request to the backend API.", "scope": "", "scopeKind": ""}, {"name": "apiPatch(url, body = {}, config = {})", "description": "Perform a PATCH request to the backend API.", "scope": "", "scopeKind": ""}, {"name": "apiDelete(url, config = {})", "description": "Perform a DELETE request to the backend API.", "scope": "", "scopeKind": ""}, {"name": "fakeAuth(username, password)", "description": "Simulate an authentication process with mock credentials for demo purposes.", "scope": "", "scopeKind": ""}], "calls": ["axios.create", "http.interceptors.request.use", "http.interceptors.response.use", "axios.post", "setAuthToken"], "search-terms": ["client.js", "auth token management", "token refresh", "axios interceptors", "React environment variable", "API base URL", "mock authentication"], "state": 2, "file_id": 13, "knowledge_revision": 52, "git_revision": "765f39dddec5691e6faf919d395f441e742d6f9f", "revision_history": [{"28": ""}, {"52": "765f39dddec5691e6faf919d395f441e742d6f9f"}], "ctags": [{"_type": "tag", "name": "API_BASE_URL", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^const API_BASE_URL = process.env.REACT_APP_API_URL || 'http:\\/\\/localhost:8000';$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "addRefreshSubscriber", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^function addRefreshSubscriber(callback) {$/", "language": "JavaScript", "kind": "function", "signature": "(callback)"}, {"_type": "tag", "name": "admin@demo", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^    'admin@demo': { role: 'admin' },$/", "language": "JavaScript", "kind": "class", "scope": "fakeAuth.users", "scopeKind": "class"}, {"_type": "tag", "name": "apiDelete", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^export async function apiDelete(url, config = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "(url, config = {})"}, {"_type": "tag", "name": "apiGet", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^export async function apiGet(url, config = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "(url, config = {})"}, {"_type": "tag", "name": "apiPatch", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^export async function apiPatch(url, body = {}, config = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "(url, body = {}, config = {})"}, {"_type": "tag", "name": "apiPost", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^export async function apiPost(url, body = {}, config = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "(url, body = {}, config = {})"}, {"_type": "tag", "name": "clearAuthAndRedirect", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^export function clearAuthAndRedirect() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "err", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^    const err = { status: 401, message: 'Invalid credentials' };$/", "language": "JavaScript", "kind": "class", "scope": "fakeAuth", "scopeKind": "class"}, {"_type": "tag", "name": "fakeAuth", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^export async function fakeAuth(username, password) {$/", "language": "JavaScript", "kind": "function", "signature": "(username, password)"}, {"_type": "tag", "name": "getAuthToken", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^export function getAuthToken() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "http", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^const http = axios.create({$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "inMemoryToken", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^let inMemoryToken = null;$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "isRefreshing", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^let isRefreshing = false;$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "member@demo", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^    'member@demo': { role: 'member' },$/", "language": "JavaScript", "kind": "class", "scope": "fakeAuth.users", "scopeKind": "class"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^    const err = { status: 401, message: 'Invalid credentials' };$/", "language": "JavaScript", "kind": "property", "scope": "fakeAuth.err", "scopeKind": "class"}, {"_type": "tag", "name": "notifySubscribers", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^function notifySubscribers(newToken) {$/", "language": "JavaScript", "kind": "function", "signature": "(newToken)"}, {"_type": "tag", "name": "refreshPromise", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^let refreshPromise = null;$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "refreshSubscribers", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^const refreshSubscribers = [];$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "role", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^    'admin@demo': { role: 'admin' },$/", "language": "JavaScript", "kind": "property", "scope": "fakeAuth.users.admin@demo", "scopeKind": "class"}, {"_type": "tag", "name": "role", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^    'member@demo': { role: 'member' },$/", "language": "JavaScript", "kind": "property", "scope": "fakeAuth.users.member@demo", "scopeKind": "class"}, {"_type": "tag", "name": "role", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^    'trainer@demo': { role: 'trainer' },$/", "language": "JavaScript", "kind": "property", "scope": "fakeAuth.users.trainer@demo", "scopeKind": "class"}, {"_type": "tag", "name": "setAuthToken", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^export function setAuthToken(token) {$/", "language": "JavaScript", "kind": "function", "signature": "(token)"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^    const err = { status: 401, message: 'Invalid credentials' };$/", "language": "JavaScript", "kind": "property", "scope": "fakeAuth.err", "scopeKind": "class"}, {"_type": "tag", "name": "trainer@demo", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^    'trainer@demo': { role: 'trainer' },$/", "language": "JavaScript", "kind": "class", "scope": "fakeAuth.users", "scopeKind": "class"}, {"_type": "tag", "name": "users", "path": "/home/kavia/workspace/code-generation/gym-full-application-21255-21379/WebApplication/src/api/client.js", "pattern": "/^  const users = {$/", "language": "JavaScript", "kind": "class", "scope": "fakeAuth", "scopeKind": "class"}], "hash": "3ea8527b8865b5c3d35bf565032942b7", "format-version": 4, "code-base-name": "WebApplication", "filename": "WebApplication/src/api/client.js", "fields": [{"name": "let inMemoryToken = null;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let isRefreshing = false;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "const err = { status: 401, message: 'Invalid credentials' };", "scope": "fakeAuth.err", "scopeKind": "class", "description": "unavailable"}, {"name": "let refreshPromise = null;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "'admin@demo': { role: 'admin' },", "scope": "fakeAuth.users.admin@demo", "scopeKind": "class", "description": "unavailable"}, {"name": "'member@demo': { role: 'member' },", "scope": "fakeAuth.users.member@demo", "scopeKind": "class", "description": "unavailable"}, {"name": "'trainer@demo': { role: 'trainer' },", "scope": "fakeAuth.users.trainer@demo", "scopeKind": "class", "description": "unavailable"}]}